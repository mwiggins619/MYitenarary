{"version":3,"sources":["Component/CarouselImg.js","store/actions/usersAction.js","store/actions/cityActions.js","Component/Landing.js","Component/Users.js","store/actions/itineraryActions.js","Component/UserAccount.js","Component/Login.js","Component/Cities.js","Component/AddCity.js","Component/Footer.js","Component/AddComments.js","Component/AddItinerary.js","Component/Itinerary.js","Component/Notfound.js","Component/Header.js","Component/LogOut.js","App.js","serviceWorker.js","store/reducers/citiesReducer.js","store/reducers/itineraryReducer.js","store/reducers/usersReducers.js","store/reducers/rootReducer.js","index.js","Component/images/Circle.png"],"names":["CarouselImg","cities","this","props","breakpoints","breakpoint","settings","slidesToShow","slidesToScroll","dots","showSides","sidesOpacity","sideSize","scrollOnDevice","map","city","index","key","className","name","src","picture","alt","Component","login","userData","dispatch","axios","post","then","res","console","log","data","token","status","localStorage","setItem","decoded","jwt_decode","type","payload","catch","error","response","alert","fetchCitiesAction","fetch","resp","json","err","Landing","state","location","code","search","split","googleAuth","to","Circle","length","connect","ownProps","Users","handelChange","e","setState","target","id","value","handelSubmit","preventDefault","email","password","newUser","register","users","onSubmit","htmlFor","onChange","user","fetchItinerariesByCityName","fetchItinerariesFavorite","emailAdded","fetchItinerariesDeleteFavorite","UserAccount","handelFavorite","handelDeleteFavorite","ids","favorites","fetchProfileFavorites","itineraries","favoriteitineraries","itinerary","activities","icon","faHeart","size","style","includes","color","onClick","_id","profile","duration","price","Login","isLoggedin","Fragment","placeholder","Button","href","faGoogle","Cities","handleChange","filter","toLowerCase","startsWith","filterList","Spinner","animation","role","AddCity","newCity","country","getItem","fetchAddCity","config","headers","Authorization","Footer","fluid","Date","getFullYear","AddComments","modal","comments","toggle","addComments","variant","Modal","isOpen","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","block","marginTop","AddItinerary","newitinerary","rating","hashtags","fetchNewItinerary","width","Itinerary","newColor","favColor","handelDeleteComment","fetchDeleteComment","match","params","Accordion","defaultActiveKey","Toggle","as","eventKey","aria-controls","Collapse","comment","Container","Row","Col","Card","Body","Text","msg","title","delete","Notfound","Header","Navbar","dark","expand","NavbarBrand","NavbarToggler","navbar","Nav","NavItem","NavLink","UncontrolledDropdown","nav","inNavbar","DropdownToggle","ButtonGroup","caret","DropdownMenu","right","DropdownItem","inline","Image","roundedCircle","LogOut","logUserOut","get","removeItem","App","exact","path","component","Boolean","window","hostname","initialState","citiesReducer","action","itineraryReducer","usersReducers","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.a2847d0a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport InfiniteCarousel from \"react-leaf-carousel\";\n// import { fitchItinerariesAction } from \"../store/actions/itineraryActions\";\nexport default class CarouselImg extends Component {\n  render() {\n    const cities = this.props.cities;\n    return (\n      <div>\n        <InfiniteCarousel\n          breakpoints={[\n            {\n              breakpoint: 500,\n              settings: {\n                slidesToShow: 2,\n                slidesToScroll: 2,\n              },\n            },\n            {\n              breakpoint: 768,\n              settings: {\n                slidesToShow: 3,\n                slidesToScroll: 3,\n              },\n            },\n          ]}\n          dots={true}\n          showSides={true}\n          sidesOpacity={0.5}\n          sideSize={0.1}\n          slidesToScroll={4}\n          slidesToShow={4}\n          scrollOnDevice={true}\n        >\n          {cities.map((city, index) => {\n            return (\n              // <Link to={\"/\" + city.name}>\n              <div key={index}>\n                <h6 className=\"carsoulName card-title\">{city.name}</h6>\n                <img\n                  className=\"imgCarsoul rounded d-block w-100\"\n                  //style={style.img}\n                  src={city.picture}\n                  alt=\"city\"\n                />\n              </div>\n              // </Link>\n            );\n          })}\n        </InfiniteCarousel>\n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\"; // import dependency\n// import { Redirect } from \"react-router-dom\";\n// import fetchItinerariesByCityName from \"../../Component/Itinerary\";\nexport const fetchUsersAction = () => {\n  return (dispatch) => {\n    //add the full url of your back end\n    fetch(\"http://localhost:5000/api/users/all\")\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((json) => {\n        dispatch({ type: \"FETCH_USERS_SUCCESS\", payload: json });\n      })\n      .catch((err) => {\n        dispatch({ type: \"FETCH_USERS_ERROR\", payload: err });\n      });\n  };\n};\n\nexport const register = (newUser) => {\n  return (dispatch) => {\n    axios\n      .post(\"http://localhost:5000/api/users/register\", newUser)\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          const token = res.data.token;\n          localStorage.setItem(\"token\", token);\n          console.log(\"token\", token);\n          const decoded = jwt_decode(token); // decode your token here\n          // window.location = \"/Login\";\n          dispatch({\n            type: \"LOGIN_SUCCESS\",\n            payload: decoded,\n            token: res.data.token,\n          });\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"Register error\");\n          } else {\n            //alert with something else\n            alert(\"Be Sure From Your Register\");\n          }\n        }\n      });\n    //add the full url of your back end\n  };\n};\n\nexport const googleAuth = (code) => {\n  return (dispatch) => {\n    localStorage.setItem(\"token\", code);\n    const decoded = jwt_decode(code);\n    dispatch({\n      type: \"LOGIN_SUCCESS\",\n      payload: decoded,\n      token: code,\n    });\n  };\n};\nexport const login = (userData) => {\n  return (dispatch) => {\n    axios\n      .post(\"http://localhost:5000/api/users/login\", userData)\n      .then((res) => {\n        console.log(\"response\", res.data.token);\n        if (res.status === 200) {\n          // decode the token\n          const token = res.data.token;\n          console.log(token);\n          localStorage.setItem(\"token\", res.data.token);\n          const decoded = jwt_decode(token); // decode your token here\n          dispatch({\n            type: \"LOGIN_SUCCESS\",\n            payload: decoded,\n            token: res.data.token,\n          });\n        }\n      })\n      .catch((error) => {\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"loggin error\");\n          } else {\n            // alert(\"error from Login\");\n          }\n        }\n      });\n    //add the full url of your back end\n    // axios.get(\"http://localhost:3000/Landing\");\n  };\n};\n//////////////log out\nexport const logUserOut = () => {\n  return (dispatch) => {\n    axios.get(\"http://localhost:3000/Landing\");\n    localStorage.removeItem(\"token\");\n    dispatch({ type: \"LOGED_OUT\" });\n  };\n};\n\n////////////delete email favorite from the itinerary\n// export const fetchItinerariesDeleteFavorite = (emailAdded, id, name) => {\n//   return (dispatch) => {\n//     axios\n//       .delete(`http://localhost:5000/api/itineraries/${id}/favorites`, {\n//         id: id,\n//       })\n//       .then((res) => {\n//         console.log(\"response\", res);\n//         if (res.status === 200) {\n//           //send the user to his account page\n//           dispatch({ type: \"DELETE_USER_FAVORITE\" });\n//           dispatch(fetchItinerariesByCityName(name));\n//         }\n//       })\n//       .catch((error) => {\n//         console.log(\"error \" + error.response);\n//         if (error.response) {\n//           if (error.response.status === 409) {\n//             alert(\"problem with email\");\n//           } else {\n//             //alert with something else\n//             alert(\"Be Sure From Your email and link at delete fav\");\n//           }\n//         }\n//       });\n//   };\n// };\n","import axios from \"axios\";\nexport const fetchCitiesAction = () => {\n  return (dispatch) => {\n    //add the full url of your back end\n    fetch(\"http://localhost:5000/api/cities/all\")\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((json) => {\n        dispatch({ type: \"FETCH_CITIES_SUCCESS\", payload: json });\n      })\n      .catch((err) => {\n        dispatch({ type: \"FETCH_CITIES_ERROR\", payload: err });\n      });\n  };\n};\nexport const fetchAddCity = (newCity, token) => {\n  return (dispatch) => {\n    const config = {\n      headers: {\n        Authorization: token,\n      },\n    };\n\n    axios\n      .post(\"http://localhost:5000/api/cities/\", newCity, config)\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          dispatch({ type: \"ADD_CITY\", token });\n          dispatch(fetchCitiesAction());\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"Be Sure From Your email and link\");\n          }\n        }\n      });\n  };\n};\n// add the token to the headers of the axios request\n","import React, { Component } from \"react\";\nimport \"../App.css\";\nimport Circle from \"../Component/images/Circle.png\";\nimport CarouselImg from \"./CarouselImg\";\n// import HeaderMatirial from \"./HeaderMatirial\";\nimport { googleAuth } from \"../store/actions/usersAction\";\nimport { Link } from \"react-router-dom\";\nimport { fetchCitiesAction } from \"../store/actions/cityActions\";\nimport { connect } from \"react-redux\";\nclass Landing extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cities: null,\n    };\n  }\n  componentDidMount() {\n    this.props.fetchCitiesAction();\n\n    console.log(this.props.location);\n    const code = this.props.location.search.split(\"=\")[1];\n    if (code) {\n      this.props.googleAuth(code);\n      console.log(code);\n    }\n  }\n  render() {\n    const cities = this.props.cities;\n    return (\n      <div className=\"container-fluied \">\n        <header className=\"col-12 header\">\n          <section className=\"container-for-header-text col-12\">\n            <div className=\"header-text-wrapper col-sm-12\">\n              <h1>My Itinerary</h1>\n              <p>make your trip with Love</p>\n            </div>\n          </section>\n\n          {/* <img src={PhotoWithCamera} className=\"App-logo \" alt=\"logo\" /> */}\n        </header>\n\n        <div className=\"transperant\">\n          <p className=\"pt-4 textSize col-sm-12 \">\n            Find your perfect trip ,designed by insiders who know their cities{\" \"}\n          </p>\n          <h1 className=\"textSize mt-4 col-sm-12 \">Start Browing</h1>\n          <Link to=\"/Cities\">\n            <img src={Circle} alt=\"looking\" className=\"circle\" />\n          </Link>\n          <p className=\"mt-4 textSize col-sm-12\">\n            Want to build your own Itinerary ?\n          </p>\n\n          {cities.length > 0 && <CarouselImg cities={cities} />}\n        </div>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"state\", state);\n  return {\n    cities: state.cities.cities,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCitiesAction: (city) => dispatch(fetchCitiesAction(city)),\n  googleAuth: (code) => dispatch(googleAuth(code)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Landing);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { register } from \"../store/actions/usersAction\";\nclass Users extends Component {\n  constructor() {\n    super();\n    this.state = {\n      users: {\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        picture: \"\",\n      },\n    };\n  }\n\n  handelChange = (e) => {\n    console.log(e);\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n  handelSubmit = (e) => {\n    e.preventDefault();\n\n    if (\n      this.state.name === \"\" ||\n      this.state.email === \"\" ||\n      this.state.password === \"\"\n    ) {\n      alert(\"You should fill all the fields\");\n    } else {\n      const newUser = {\n        name: this.state.name,\n        email: this.state.email,\n        password: this.state.password,\n        picture: this.state.picture,\n      };\n      /////fetch from redux\n      this.props.register(newUser);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <h5 className=\"card-title\">Sign Up</h5>\n        <form className=\"form-group\" onSubmit={this.handelSubmit}>\n          <div className=\"row block\">\n            <div className=\"col-md-4\">\n              <label htmlFor=\"name\">Name</label>\n              <input type=\"text\" id=\"name\" onChange={this.handelChange} />\n            </div>\n            <div className=\"col-md-4\">\n              <label htmlFor=\"email\">email</label>\n              <input type=\"text\" id=\"email\" onChange={this.handelChange} />\n            </div>\n          </div>\n          <div className=\"row block\">\n            <div className=\"col-md-4\">\n              <label htmlFor=\"password\">password</label>\n              <input\n                type=\"password\"\n                id=\"password\"\n                onChange={this.handelChange}\n              />\n            </div>\n            <div className=\"col-md-4\">\n              <label htmlFor=\"picture\">picture</label>\n              <input type=\"picture\" id=\"picture\" onChange={this.handelChange} />\n            </div>\n          </div>\n          <div className=\"col-md-4\">\n            <button>Sign Up</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: state.users,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  register: (newUser) => dispatch(register(newUser)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Users);\n","import axios from \"axios\";\nexport const fitchItinerariesAction = () => {\n  return (dispatch) => {\n    //add the full url of your back end\n    fetch(\"http://localhost:5000/api/itineraries\")\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((json) => {\n        dispatch({ type: \"FETCH_ITINERARIES_SUCCESS\", payload: json });\n      })\n      .catch((err) => {\n        dispatch({ type: \"FETCH_ITINERARIES_ERROR\", payload: err });\n      });\n  };\n};\nexport const fetchItinerariesByCityName = (city) => {\n  console.log(\"city\", city);\n  return (dispatch) => {\n    fetch(\"http://localhost:5000/api/itineraries/all/\" + city)\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((json) => {\n        console.log(\"json :\", json);\n        dispatch({ type: \"FETCH_ITINERARIES_SUCCESS\", payload: json });\n      })\n      .catch((err) => {\n        dispatch({ type: \"FETCH_ITINERARIES_ERROR\", payload: err });\n      });\n  };\n};\nexport const fetchItinerariesFavorite = (emailAdded, id, name) => {\n  return (dispatch) => {\n    axios\n      .post(`http://localhost:5000/api/itineraries/${id}/favorites`, {\n        email: emailAdded,\n      })\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //send the user to his account page\n          dispatch({ type: \"ADD_ITINERARY_FAVORITE\" });\n          dispatch(fetchItinerariesByCityName(name));\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"Be Sure From Your email and link\");\n          }\n        }\n      });\n  };\n};\n\n////////////delete email favorite from the itinerary\nexport const fetchItinerariesDeleteFavorite = (emailAdded, id, name) => {\n  return (dispatch) => {\n    axios\n      .post(`http://localhost:5000/api/itineraries/${id}/deletefavorites`, {\n        email: emailAdded,\n      })\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //send the user to his account page\n          dispatch({ type: \"DELETE_ITINERARY_FAVORITE\" });\n          dispatch(fetchItinerariesByCityName(name));\n        }\n      })\n      .catch((error) => {\n        console.log(\"error \" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"Be Sure From Your email and link at delete fav\");\n          }\n        }\n      });\n  };\n};\n///////////////fetch the profile favorite\nexport const fetchProfileFavorites = (ids) => {\n  console.log(\"ids\", ids);\n\n  return (dispatch) => {\n    axios\n      .post(\"http://localhost:5000/api/itineraries/userfavorites\", {\n        ids: ids,\n      })\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //send the user to his account page\n          dispatch({ type: \"FETCH_PROFILE_ITINERARY\", payload: res.data });\n          // dispatch(fetchItinerariesByCityName(res.data));\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"error from profile action itinerary\");\n          }\n        }\n      });\n  };\n};\n////////////////Add comments to the itinerary by user\nexport const addComments = (comments, name, id, email) => {\n  console.log(\"name\", name);\n  return (dispatch) => {\n    axios\n      .post(`http://localhost:5000/api/itineraries/${id}/comments`, {\n        comments: comments,\n        email,\n      })\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //send the user to his account page\n          dispatch({ type: \"ADD_COMMENTS\" });\n          dispatch(fetchItinerariesByCityName(name));\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"alert from comment action\");\n          }\n        }\n      });\n  };\n};\nexport const fetchDeleteComment = (comments, name, id) => {\n  console.log(\"name\", name);\n  return (dispatch) => {\n    axios\n      .delete(`http://localhost:5000/api/itineraries/${id}/comments`, {\n        comments: comments,\n      })\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //send the user to his account page\n          dispatch({ type: \"DELETE_COMMENTS\" });\n          dispatch(fetchItinerariesByCityName(name));\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error.response);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"alert from comment action\");\n          }\n        }\n      });\n  };\n};\n////////Add itinerary\nexport const fetchNewItinerary = (newitinerary, token) => {\n  return (dispatch) => {\n    console.log(\"newitinerary :\", newitinerary);\n    console.log(\"token\", token);\n    const config = {\n      headers: {\n        Authorization: token,\n      },\n    };\n    axios\n      .post(\"http://localhost:5000/api/itineraries/add\", newitinerary, config)\n      .then((res) => {\n        console.log(\"response\", res);\n        if (res.status === 200) {\n          //why are you trying to get a token here? this is just bad copy pasting from other routes\n          dispatch({ type: \"ADD_ITINERARY\" });\n          dispatch(fetchItinerariesByCityName(newitinerary.name));\n        }\n      })\n      .catch((error) => {\n        console.log(\"error\" + error);\n        if (error.response) {\n          if (error.response.status === 409) {\n            alert(\"problem with email\");\n          } else {\n            //alert with something else\n            alert(\"error from add fetch\", error);\n          }\n        }\n      });\n  };\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchProfileFavorites } from \"../store/actions/itineraryActions\";\nimport { login } from \"../store/actions/usersAction\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport {\n  fetchItinerariesFavorite,\n  fetchItinerariesDeleteFavorite,\n} from \"../store/actions/itineraryActions\";\nclass UserAccount extends Component {\n  componentDidMount() {\n    const ids = this.props.users.favorites;\n    console.log(\"ids\", ids);\n    // const ids =this.props.itineraries.favorites.includes(this.props.users.email)\n    this.props.fetchProfileFavorites(ids);\n  }\n  handelFavorite = (id, name) => {\n    if (this.props.users.email == null) {\n      alert(\"you need to log in\");\n    } else {\n      const emailAdded = this.props.user.email;\n\n      this.props.fetchItinerariesFavorite(emailAdded, id, name);\n    }\n  };\n  handelDeleteFavorite = (id, name) => {\n    const emailAdded = this.props.users.email;\n    console.log(\"emailAdded\", emailAdded);\n    this.props.fetchItinerariesDeleteFavorite(emailAdded, id, name);\n  };\n\n  render() {\n    const itineraries = this.props.itineraries.favoriteitineraries;\n    console.log(\"itineraries\", itineraries);\n    const email = this.props.users.email;\n    console.log(\"from userAccount\", this.props.users);\n    return (\n      <div className=\"container\">\n        {/* {users.isLoggedin && itineraries.includes(users.favorites) ? (\n          <img src={itineraries.profile} />\n        ) : (\n          <h4>You Have No Liked Itinerary</h4>\n        )} */}\n        {/* {this.props.itineraries.includes(users.email) ? (\n          <img src={itineraries.profile} />\n        ) : (\n          <h4>you have no favorite itinerary</h4>\n        )} */}\n        {itineraries &&\n          itineraries.map((itinerary, index) => (\n            <div key={index} itinerary={itinerary}>\n              {/* <div>\n                <img src={itinerary.profile} alt=\"\" />\n              </div>{\" \"} */}\n              <div\n                className=\"container m-2 itinerary rounded\"\n                key={index}\n                itinerary={itinerary}\n              >\n                <div className=\"row justify-content-between\">\n                  <h4 className=\"card-title pt-3 text-light col-6\">\n                    Activities in {itinerary.name} : {itinerary.activities}\n                  </h4>\n\n                  <FontAwesomeIcon\n                    className=\"pt-3\"\n                    icon={faHeart}\n                    size=\"3x\"\n                    style={\n                      itinerary.favorites.includes(email)\n                        ? { color: \"red\" }\n                        : { color: \"#3986c3\" }\n                    }\n                    // onClick={() => this.handelFavorite(itinerary.name)}\n                    onClick={() =>\n                      itinerary.favorites.includes(email)\n                        ? this.handelDeleteFavorite(\n                            itinerary._id,\n                            itinerary.name\n                          )\n                        : this.handelFavorite(itinerary._id, itinerary.name)\n                    }\n                    // onClick={() =>\n                    //   itinerary.favorites.includes(email) &&\n                    //     this.props.user.favorites.includes(itinerary._id)\n                    //     ? this.handelDeleteFavorite(itinerary._id, itinerary.name)\n                    //     : this.handelFavorite(itinerary._id, itinerary.name)\n                    // }\n                  />\n                </div>\n                <img\n                  className=\"card-body\"\n                  src={itinerary.profile}\n                  alt={itinerary.name}\n                />\n                <div className=\"text-light pb-3\">\n                  <h4>\n                    The Price for {itinerary.duration} With Hotels{\" \"}\n                    {itinerary.price}\n                  </h4>\n                </div>\n              </div>\n            </div>\n          ))}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"state\", state);\n  return {\n    users: state.users,\n    itineraries: state.itineraries,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  login: (userData) => dispatch(login(userData)),\n  fetchProfileFavorites: (ids) => dispatch(fetchProfileFavorites(ids)),\n  fetchItinerariesFavorite: (emailAdded, id, name) =>\n    dispatch(fetchItinerariesFavorite(emailAdded, id, name)),\n  fetchItinerariesDeleteFavorite: (emailAdded, id, name) =>\n    dispatch(fetchItinerariesDeleteFavorite(emailAdded, id, name)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAccount);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../store/actions/usersAction\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGoogle } from \"@fortawesome/free-brands-svg-icons\";\nimport { Button } from \"reactstrap\";\nimport UserAccount from \"./UserAccount\";\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\",\n  };\n  handelChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n  handelSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.email === \"\" || this.state.password === \"\") {\n      return alert(\"you need to fill both field\");\n    } else {\n      const userData = {\n        email: this.state.email,\n        password: this.state.password,\n      };\n      console.log(userData);\n      this.props.login(userData);\n    }\n  };\n  render() {\n    const users = this.props.user;\n    return (\n      <div className=\"container\">\n        {this.props.user.isLoggedin ? (\n          <React.Fragment>\n            <UserAccount users={users} />\n          </React.Fragment>\n        ) : (\n          <form className=\"form-horizontal\" onSubmit={this.handelSubmit}>\n            <div className=\"form-group\">\n              <label\n                htmlFor=\"inputEmail3\"\n                className=\"col-sm-2 control-label\"\n              ></label>\n              <div className=\"col-sm-10\">\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  id=\"email\"\n                  placeholder=\"Email\"\n                  onChange={this.handelChange}\n                />\n              </div>\n            </div>\n            <div className=\"form-group\">\n              <label\n                htmlFor=\"inputPassword3\"\n                className=\"col-sm-2 control-label\"\n              ></label>\n              <div className=\"col-sm-10\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  id=\"password\"\n                  placeholder=\"Password\"\n                  onChange={this.handelChange}\n                />\n              </div>\n            </div>\n            <div className=\"form-group row\">\n              <div className=\"col-sm-offset-2 col-sm-10 align-items-center\">\n                <button>Sign in</button>\n              </div>\n            </div>\n          </form>\n        )}\n        <div className=\"col-sm-offset-2 col-sm-10 align-items-center\">\n          <Button href=\"http://localhost:5000/api/users/auth/google\">\n            <FontAwesomeIcon icon={faGoogle} className=\"mr-2 \" />\n            Sign In With Google\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.users,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  login: (userData) => dispatch(login(userData)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Spinner } from \"react-bootstrap\";\nimport { fetchCitiesAction } from \"../store/actions/cityActions\";\nimport { Link } from \"react-router-dom\";\nclass Cities extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cities: [],\n      search: \"\",\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchCitiesAction();\n  }\n  cutArray() {\n    return this.props.cities.map((city, index) => {\n      return index < 15;\n    });\n  }\n  handleChange = (e) => {\n    this.setState({\n      search: e.target.value,\n    });\n  };\n  filter() {\n    if (this.props.cities) {\n      const filterCity = this.props.cities.filter((city, index) => {\n        let cityName = city.name.toLowerCase();\n        return cityName.startsWith(this.state.search.toLowerCase());\n      });\n      return filterCity;\n    } else return [];\n  }\n\n  render() {\n    const filterList = this.filter();\n\n    return (\n      <div className=\"container-fluied \">\n        <div className=\"justify-content-center col-sm-12 col-md-12 my-3 \">\n          {/* <label htmlFor=\"filter\"> </label> */}\n          <input\n            placeholder=\"Search for City:\"\n            className=\"btn btn-outline-info mr-2\"\n            type=\"search\"\n            id=\"filter\"\n            value={this.state.search}\n            onChange={this.handleChange}\n          />\n          <Link to=\"/AddCity\">\n            <button className=\"btn btn-outline-info\">Add city you like</button>\n          </Link>\n        </div>\n        {!this.props.cities && (\n          <Spinner animation=\"border\" role=\"status\">\n            <span className=\"sr-only\">Loading...</span>\n          </Spinner>\n        )}\n\n        {filterList &&\n          filterList.map((city, index) => (\n            <Link key={index} to={\"itineraries/all/\" + city.name}>\n              <div\n                city={city}\n                className=\"col-sm-12\n                col-md-12\n                city\n                col-lg-3 justify-content-between container mx-2 \"\n              >\n                <div className=\"card border-info \">\n                  <h3 className=\"card-title\">{city.name}</h3>\n                  <img className=\"card-img \" src={city.picture} alt=\"city\" />\n                </div>\n              </div>\n            </Link>\n          ))}\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    cities: state.cities.cities,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  fetchCitiesAction: (city) => dispatch(fetchCitiesAction(city)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Cities);\n","import React, { Component } from \"react\";\nimport { fetchCitiesAction, fetchAddCity } from \"../store/actions/cityActions\";\nimport { connect } from \"react-redux\";\n\nclass AddCity extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: null,\n      country: null,\n      picture: null,\n    };\n  }\n\n  componentDidMount() {\n    const city = this.props.cities;\n    this.props.fetchCitiesAction(city);\n  }\n\n  handelChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n  handelSubmit = (e) => {\n    e.preventDefault();\n    console.log(e);\n    const newCity = {\n      name: this.state.name,\n      country: this.state.country,\n      picture: this.state.picture,\n    };\n    // retrieve token from local storage and send it to the add city action0DEFFF\n    //where to write condition for user login?\n    var token = localStorage.getItem(\"token\");\n    this.props.fetchAddCity(newCity, token);\n\n    console.log(\"submit\", this.state);\n  };\n  render() {\n    return (\n      <div className=\"container-fluied\">\n        <form\n          onSubmit={this.handelSubmit}\n          className=\"App-header align-items-center\"\n        >\n          <div className=\"d-block \">\n            <label className=\"mx-2\" htmlFor=\"name\">\n              {\" \"}\n              Name:\n            </label>\n            <input type=\"text\" id=\"name\" onChange={this.handelChange} />\n          </div>\n          <div className=\"d-block\">\n            <label className=\"mx-2\" htmlFor=\"country\">\n              {\" \"}\n              Country:\n            </label>\n            <input type=\"text\" id=\"country\" onChange={this.handelChange} />\n          </div>\n          <div className=\"d-block\">\n            <label className=\"mx-2\" htmlFor=\"picture\">\n              Picture:\n            </label>\n            <input type=\"url\" id=\"picture\" onChange={this.handelChange} />\n          </div>\n          <div className=\"d-block\">\n            <button className=\"mx-2\" type=\"submit\">\n              Add New City\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    cities: state.cities.cities,\n    user: state.users,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAddCity: (city, token) => dispatch(fetchAddCity(city, token)),\n  fetchCitiesAction: (city) => dispatch(fetchCitiesAction(city)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddCity);\n","import React, { Component } from \"react\";\nimport { MDBContainer, MDBFooter } from \"mdbreact\";\nexport default class Footer extends Component {\n  render() {\n    return (\n      <div>\n        <MDBFooter className=\" footer font-small\">\n          <div className=\"footer-copyright text-center py-3\">\n            <MDBContainer fluid>\n              &copy; {new Date().getFullYear()} Copyright:{\" \"}\n              <a href=\"https://www.mdbootstrap.com\"> MyItinerary.com </a>\n            </MDBContainer>\n          </div>\n        </MDBFooter>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { addComments } from \"../store/actions/itineraryActions\";\n\nclass AddComments extends Component {\n  state = {\n    modal: false,\n    comments: \"\",\n  };\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal,\n    });\n  };\n  onChange = (e) => {\n    this.setState({\n      comments: e.target.value,\n    });\n  };\n  onSubmit = (name, id) => {\n    if (this.props.user.email == null) {\n      alert(\"you need tpo log in\");\n    } else {\n      const email = this.props.user.email;\n      const comments = this.state.comments;\n      console.log(\"comments\", comments);\n\n      //////add comments\n      this.props.addComments(comments, name, id, email);\n      ///////////close modal\n      this.toggle();\n    }\n  };\n\n  render() {\n    const itinerary = this.props.itinerary;\n    return (\n      <div>\n        <>\n          <Button\n            variant=\"primary\"\n            color=\"primary\"\n            size=\"sm\"\n            onClick={this.toggle}\n          >\n            Add Comment\n          </Button>\n\n          <Modal isOpen={this.state.modal} toggle={this.toggle}>\n            <ModalHeader toggle={this.toggle}>\n              Add comment to the itinerary\n            </ModalHeader>\n            <ModalBody>\n              <Form>\n                <FormGroup>\n                  <Label for=\"comments\">Write your comment </Label>\n                  <Input\n                    type=\"text\"\n                    // name=\"comments\"\n                    id=\"comments\"\n                    onChange={this.onChange}\n                  />\n                  <Button\n                    color=\"dark\"\n                    block\n                    style={{ marginTop: \"2rem\" }}\n                    onClick={() => this.onSubmit(itinerary.name, itinerary._id)}\n                  >\n                    Add Comments\n                  </Button>\n                </FormGroup>\n              </Form>{\" \"}\n            </ModalBody>\n          </Modal>\n        </>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    comments: state.itineraries.comments,\n    itineraries: state.itineraries.itineraries,\n    user: state.users,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  addComments: (comments, name, id, email) =>\n    dispatch(addComments(comments, name, id, email)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(AddComments);\n","import React, { Component } from \"react\";\nimport { fetchNewItinerary } from \"../store/actions/itineraryActions\";\nimport { connect } from \"react-redux\";\n// import { Redirect } from \"react-router-dom\";\n// import { Form, Button } from \"react-bootstrap\";\nclass AddItinerary extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: null,\n      profile: null,\n      activities: [],\n      hashtags: [],\n      price: null,\n      duration: null,\n      rating: null,\n    };\n  }\n\n  handelChange = (e) => {\n    console.log(\"e\", e);\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n    console.log(\"e.target.value\", e.target.value);\n    console.log(\"state\", this.state);\n  };\n  handelSubmit = (e) => {\n    e.preventDefault();\n    if (!this.props.user.isLoggedin) {\n      alert(\" you need to login\");\n      // return <Redirect to=\"/Login\" />;\n    } else if (\n      this.state.name === \"\" ||\n      this.state.profile === \"\" ||\n      this.state.activities === \"\"\n    ) {\n      alert(\"You need to fill these fields\");\n    } else {\n      const newitinerary = {\n        name: this.state.name,\n        profile: this.state.profile,\n        rating: this.state.rating,\n        hashtags: this.state.hashtags,\n        activities: this.state.activities,\n        duration: this.state.duration,\n        price: this.state.price,\n      };\n\n      var token = localStorage.getItem(\"token\");\n      this.props.fetchNewItinerary(newitinerary, token);\n      console.log(\"itinerary\", newitinerary, token);\n    }\n  };\n  render() {\n    return (\n      <div\n        className=\"card p-2 card-itinerary-add border-info\"\n        style={{ width: \"80%\" }}\n      >\n        {/* <Form onSubmit={this.handelSubmit}>\n          <Form.Group controlId=\"formBasicName\">\n            <Form.Label>Name</Form.Label>\n            <Form.Control type=\"name\" placeholder=\"Enter city name\" />\n          </Form.Group>\n\n          <Form.Group controlId=\"formBasicProfile\">\n            <Form.Label>Profile</Form.Label>\n            <Form.Control\n              type=\"url\"\n              placeholder=\"Profile\"\n              onChange={this.handelChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicDuration\">\n            <Form.Label>duration</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"duration\"\n              onChange={this.handelChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicRating\">\n            <Form.Label>rating</Form.Label>\n            <Form.Control\n              type=\"number\"\n              placeholder=\"rating\"\n              onChange={this.handelChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicActivities\">\n            <Form.Label>activities</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"activities\"\n              onChange={this.handelChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicHashtags\">\n            <Form.Label>Hashtags</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Hashtags\"\n              onChange={this.handelChange}\n            />\n          </Form.Group>\n          <Form.Group controlId=\"formBasicPrice\">\n            <Form.Label>price</Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"price\"\n              onChange={this.handelChange}\n            />\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            Submit\n          </Button>\n        </Form> */}\n        {/* className=\"card p-2 card-itinerary-add border-info\"  style=\n        {{ width: \"18rem\" }}\n       >  */}\n        <form onSubmit={this.handelSubmit} className=\"m-2\">\n          <div className=\"align-items-center block\">\n            <label className=\"mx-2 \" htmlFor=\"name\">\n              Name:\n            </label>\n            <input type=\"text\" id=\"name\" onChange={this.handelChange} />{\" \"}\n          </div>\n          <div className=\"align-items-center block\">\n            <label className=\"mx-2\" htmlFor=\"profile\">\n              profile\n            </label>\n            <input type=\"url\" id=\"profile\" onChange={this.handelChange} />\n          </div>\n          <div className=\"align-items-center block\">\n            <label className=\"mx-2\" htmlFor=\"duration\">\n              duration:\n            </label>\n            <input type=\"text\" id=\"duration\" onChange={this.handelChange} />\n          </div>\n          <div className=\"align-items-center block\">\n            <label className=\"mx-2\" htmlFor=\"rating\">\n              rating:\n            </label>\n            <input type=\"number\" id=\"rating\" onChange={this.handelChange} />\n          </div>\n          <div className=\"align-items-center block\">\n            <label className=\"mx-2\" htmlFor=\"activities\">\n              activites:\n            </label>\n            <input type=\"text\" id=\"activites\" onChange={this.handelChange} />\n          </div>\n          <div className=\"align-items-center block\">\n            <label className=\"mx-2\" htmlFor=\"hashtags\">\n              hashtags:\n            </label>\n            <input type=\"text\" id=\"hashtags\" onChange={this.handelChange} />\n          </div>\n          <div className=\"align-items-center block\">\n            <label className=\"mx-2 \" htmlFor=\"price\">\n              price:\n            </label>\n            <input type=\"text\" id=\"price\" onChange={this.handelChange} />\n          </div>\n          <button className=\"mx-2 btn-info\" type=\"submit\">\n            Add New Itinerary\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    cities: state.cities.cities,\n    user: state.users,\n    itineraries: state.itineraries.itineraries,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  fetchNewItinerary: (newitinerary, token) =>\n    dispatch(fetchNewItinerary(newitinerary, token)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddItinerary);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport AddComments from \"../Component/AddComments\";\nimport { fetchItinerariesByCityName } from \"../store/actions/itineraryActions\";\nimport {\n  fetchItinerariesFavorite,\n  fetchItinerariesDeleteFavorite,\n  fetchDeleteComment,\n} from \"../store/actions/itineraryActions\";\nimport AddItinerary from \"./AddItinerary\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n// import { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { Button, Card, Accordion, Container, Row, Col } from \"react-bootstrap\";\n\nconst green = \"#ffff00\";\nconst red = \"#FF0000\";\nclass Itinerary extends Component {\n  constructor() {\n    super();\n    this.state = {\n      itineraries: [],\n      favorites: [],\n      favColor: green,\n      comments: [],\n    };\n  }\n  componentDidMount() {\n    const city = this.props.match.params.city;\n\n    this.props.fetchItinerariesByCityName(city);\n  }\n  handelChange = (e) => {\n    const newColor = this.state.favColor === green ? red : green;\n    this.setState({ favColor: newColor });\n  };\n  handelFavorite = (id, name) => {\n    if (this.props.user.email == null) {\n      alert(\"you need to log in\");\n    } else {\n      const emailAdded = this.props.user.email;\n\n      this.props.fetchItinerariesFavorite(emailAdded, id, name);\n    }\n  };\n  handelDeleteFavorite = (id, name) => {\n    if (this.props.user.email == null) {\n      alert(\"you need to log in\");\n    } else {\n      const emailAdded = this.props.user.email;\n      console.log(\"emailAdded\", emailAdded);\n      this.props.fetchItinerariesDeleteFavorite(emailAdded, id, name);\n    }\n  };\n  handelDeleteComment = (name, id, comments) => {\n    // const email = this.props.user.email;\n    // const msg = this.state.comments.msg;\n\n    this.props.fetchDeleteComment(comments, name, id);\n  };\n  filter() {\n    if (this.props.itineraries) {\n      const filterItinerary = this.props.itineraries.filter(\n        (itinerary, index) => {\n          return itinerary.profile;\n        }\n      );\n      return filterItinerary;\n    } else {\n      return [];\n    }\n  }\n  render() {\n    const filterList = this.filter();\n    const email = this.props.user.email;\n\n    return (\n      <div className=\"container\">\n        <div className=\"textSize display-2\">\n          <h3>Our Itineraries</h3>\n        </div>\n\n        {filterList &&\n          filterList.map((itinerary, index) => (\n            <div\n              className=\"container m-2 itinerary rounded\"\n              key={index}\n              itinerary={itinerary}\n            >\n              <div className=\"row justify-content-between\">\n                <h4 className=\"card-title pt-3 text-light col-6\">\n                  Activities in {itinerary.name} : {itinerary.activities}\n                </h4>\n\n                <FontAwesomeIcon\n                  className=\"pt-3\"\n                  icon={faHeart}\n                  size=\"3x\"\n                  style={\n                    itinerary.favorites.includes(email)\n                      ? { color: \"red\" }\n                      : { color: \"#3986c3\" }\n                  }\n                  // onClick={() => this.handelFavorite(itinerary.name)}\n                  onClick={() =>\n                    itinerary.favorites.includes(email)\n                      ? this.handelDeleteFavorite(itinerary._id, itinerary.name)\n                      : this.handelFavorite(itinerary._id, itinerary.name)\n                  }\n                  // onClick={() =>\n                  //   itinerary.favorites.includes(email) &&\n                  //     this.props.user.favorites.includes(itinerary._id)\n                  //     ? this.handelDeleteFavorite(itinerary._id, itinerary.name)\n                  //     : this.handelFavorite(itinerary._id, itinerary.name)\n                  // }\n                />\n              </div>\n              <img\n                className=\"card-body\"\n                src={itinerary.profile}\n                alt={itinerary.name}\n              />\n              <div className=\"text-light pb-3\">\n                <h4>\n                  The Price for {itinerary.duration} With Hotels{\" \"}\n                  {itinerary.price}\n                </h4>\n                <Accordion defaultActiveKey=\"0\">\n                  {/* <Card.Header className=\"textColor\"> */}\n                  <Accordion.Toggle\n                    as={Button}\n                    variant=\"outline-info\"\n                    size=\"sm\"\n                    eventKey=\"0\"\n                    aria-controls=\"example-fade-text\"\n                  >\n                    What Other Said\n                  </Accordion.Toggle>\n                  {/* </Card.Header> */}\n                  <Accordion.Collapse eventKey=\"0\">\n                    <React.Fragment>\n                      {itinerary.comments &&\n                        itinerary.comments.map((comment, index) => {\n                          return (\n                            <div key={index}>\n                              <Container>\n                                <Row>\n                                  <Col>\n                                    {/* <Card style={{ width: \"18rem\" }}> */}\n\n                                    <Card.Body>\n                                      <Card.Text className=\"textColor\">\n                                        {comment.msg}\n                                      </Card.Text>\n                                      <footer className=\"blockquote-footer\">\n                                        <cite title=\"Source Title\">\n                                          Written by\n                                        </cite>{\" \"}\n                                        {comment.email}{\" \"}\n                                      </footer>\n                                      <Button\n                                        variant=\"outline-danger\"\n                                        size=\"sm\"\n                                        aria-controls=\"example-fade-text\"\n                                        onClick={() =>\n                                          comment.email &&\n                                          comment.email.includes(email)\n                                            ? this.handelDeleteComment(\n                                                itinerary.name,\n                                                itinerary._id,\n                                                itinerary.comments\n                                              )\n                                            : alert(\"its not your comment\")\n                                        }\n                                      >\n                                        Delete Comment\n                                      </Button>\n                                    </Card.Body>\n                                  </Col>\n                                </Row>\n                              </Container>\n                            </div>\n                          );\n                        })}\n                    </React.Fragment>\n                  </Accordion.Collapse>\n                </Accordion>\n                <div className=\"row justify-content-center\">\n                  {/* <FontAwesomeIcon\n                    icon={faHeart}\n                    size=\"3x\"\n                    style={\n                      itinerary.favorites.includes(email)\n                        ? { color: \"red\" }\n                        : { color: \"green\" }\n                    }\n                    // onClick={() => this.handelFavorite(itinerary.name)}\n                    onClick={() =>\n                      itinerary.favorites.includes(email)\n                        ? this.handelDeleteFavorite(\n                            itinerary._id,\n                            itinerary.name\n                          )\n                        : this.handelFavorite(itinerary._id, itinerary.name)\n                    }\n                  /> */}\n\n                  <AddComments itinerary={itinerary} />\n                </div>\n              </div>\n            </div>\n          ))}\n        <React.Fragment>\n          <AddItinerary />\n        </React.Fragment>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    itineraries: state.itineraries.itineraries,\n    user: state.users,\n    comments: state.itineraries.comments,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  fetchItinerariesByCityName: (city) =>\n    dispatch(fetchItinerariesByCityName(city)),\n\n  fetchItinerariesFavorite: (emailAdded, id, name) =>\n    dispatch(fetchItinerariesFavorite(emailAdded, id, name)),\n  fetchItinerariesDeleteFavorite: (emailAdded, id, name) =>\n    dispatch(fetchItinerariesDeleteFavorite(emailAdded, id, name)),\n  fetchDeleteComment: (comments, name, id) =>\n    dispatch(fetchDeleteComment(comments, name, id)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Itinerary);\n","import React, { Component } from \"react\";\n\nexport default class Notfound extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Not Found</h1>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { login } from \"../store/actions/usersAction\";\nimport { connect } from \"react-redux\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  Form,\n  ButtonGroup,\n} from \"reactstrap\";\nimport { Image } from \"react-bootstrap\";\n// import Image from \"react-bootstrap/Image\";\nclass Header extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      isOpen: false,\n      search: \"\",\n      user: \"\",\n    };\n  }\n\n  componentDidMount() {\n    const userData = {\n      user: this.state.user,\n    };\n    console.log(userData);\n    this.props.login(userData);\n  }\n  render() {\n    //toggle = () => this.setState({ isOpen: !isOpen });\n    return (\n      <div className=\"container-fluied\">\n        <Navbar className=\"colorNav\" dark expand=\"sm\">\n          <Link to=\"/\">\n            <NavbarBrand>MyItenarary</NavbarBrand>\n          </Link>\n          <NavbarToggler\n            onClick={() => this.setState({ isOpen: !this.state.isOpen })}\n          />\n          <Collapse isOpen={this.state.isOpen} navbar>\n            <Nav className=\"mr-auto\" navbar>\n              <NavItem dark=\"true\">\n                <NavLink>\n                  {\" \"}\n                  <Link to=\"/Cities\" id=\"RouterNavLink\">\n                    Cities We Offer\n                  </Link>\n                </NavLink>\n              </NavItem>\n              <NavItem>\n                <NavLink href=\"/AddCity\">\n                  {/*                   \n                  <Link to=\"/AddCity\" id=\"RouterNavLink\"> */}\n                  New City\n                  {/* </Link> */}\n                </NavLink>\n              </NavItem>\n              {this.props.user.isLoggedin ? (\n                <NavLink href=\"/LogOut\">\n                  {/* <Link href=\"/LogOut\" id=\"RouterNavLink\"> */} Log Out\n                  {/* </Link> */}\n                </NavLink>\n              ) : (\n                <UncontrolledDropdown nav inNavbar>\n                  <DropdownToggle nav as={ButtonGroup} caret>\n                    Sign\n                  </DropdownToggle>\n                  <DropdownMenu right>\n                    <DropdownItem>\n                      {\" \"}\n                      <Link to=\"/Login\">Login </Link>\n                    </DropdownItem>\n                    <DropdownItem>\n                      <Link to=\"/Users\">Sign Up </Link>\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              )}\n            </Nav>\n            <Form inline>\n              {/* <Button variant=\"outline-success \"> */}\n              {this.props.user.isLoggedin ? (\n                <Link to=\"/UserAccount\">\n                  {/* <p> Hello {this.props.user.users}</p> */}\n                  <Image\n                    src={this.props.user.picture}\n                    style={{ width: 50 }}\n                    roundedCircle\n                  />\n                </Link>\n              ) : (\n                <Link to=\"/Login\">Login</Link>\n              )}\n              {/* </Button> */}\n            </Form>\n          </Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    user: state.users,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  login: (userData) => dispatch(login(userData)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React, { Component } from \"react\";\nimport { logUserOut } from \"../store/actions/usersAction\";\nimport { connect } from \"react-redux\";\nclass LogOut extends Component {\n  componentDidMount() {\n    this.props.logUserOut();\n  }\n  render() {\n    return <div></div>;\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    user: state.users,\n  };\n};\nconst mapDispatchToProps = (dispatch) => ({\n  logUserOut: () => dispatch(logUserOut()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogOut);\n","import React from \"react\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Landing from \"./Component/Landing\";\nimport Users from \"./Component/Users\";\nimport Login from \"./Component/Login\";\nimport Cities from \"./Component/Cities\";\nimport AddCity from \"./Component/AddCity\";\nimport Footer from \"./Component/Footer\";\nimport Itinerary from \"./Component/Itinerary\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport Notfound from \"./Component/Notfound\";\nimport Header from \"./Component/Header\";\nimport UserAccount from \"./Component/UserAccount\";\nimport LogOut from \"./Component/LogOut\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n\n      <div className=\"App\">\n        {/* <Link to=\"/\"></Link>\n\n        <Link to=\"/Users\"></Link>\n        <Link to=\"/UserAccount\"></Link>\n        <Link to=\"/login\"></Link>\n        <Link to=\"/LogOut\"></Link>\n        <Link to=\"/Cities\"></Link>\n        <Link to=\"/Itineraries\"></Link>\n        <Link to=\"/AddCity\"></Link> */}\n        <Switch>\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/Users\" component={Users} />\n          <Route path=\"/UserAccount\" component={UserAccount} />\n          <Route exact path=\"/Login\" component={Login} />\n          <Route path=\"/LogOut\" component={LogOut} />\n          <Route exact path=\"/Cities\" component={Cities} />\n          <Route exact path=\"/AddCity\" component={AddCity} />\n          <Route exact path=\"/Itineraries\" component={Itinerary} />\n          <Route exact path=\"/Itineraries/all/:city\" component={Itinerary} />\n          <Route component={Notfound} />\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\n  cities: [],\n  err: \"\",\n};\n\n//you had some issues acting the payload to pass data from your action to your reducer\n//I changed a bit the naming too so it makes more sense\nfunction citiesReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"FETCH_CITIES_SUCCESS\":\n      return { ...state, cities: action.payload, err: \"\" };\n\n    case \"FETCH_CITIES_ERROR\":\n      return { ...state, err: action.payload };\n\n    case \"ADD_CITY\":\n      return { ...state, cities: [...state.cities, action.payload] };\n\n    default:\n      return state;\n  }\n}\nexport default citiesReducer;\n","const initialState = {\n  itineraries: [],\n  err: \"\",\n  favorites: [],\n  favoriteitineraries: [],\n};\n\n//you had some issues acting the payload to pass data from your action to your reducer\n//I changed a bit the naming too so it makes more sense\nfunction itineraryReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"FETCH_ITINERARIES_SUCCESS\":\n      return { ...state, itineraries: action.payload, err: \"\" };\n\n    case \"FETCH_ITINERARIES_ERROR\":\n      console.log(\"FETCH_ITINERARIES_ERROR\", action);\n      return { ...state, err: action.payload };\n    case \"ADD_ITINERARY\":\n      return { ...state };\n    case \"ADD_ITINERARY_FAVORITE\":\n      console.log(\"ADD_ITINERARY_FAVORITE\");\n      return { ...state };\n\n    case \"DELETE_ITINERARY_FAVORITE\":\n      console.log(\"DELETE_ITINERARY_FAVORITE\");\n      return { ...state };\n    case \"FETCH_PROFILE_ITINERARY\":\n      console.log(\"FETCH_PROFILE_ITINERARY\", action.payload);\n      return { ...state, favoriteitineraries: action.payload };\n\n    case \"ADD_COMMENTS\":\n      console.log(\"ADD_COMMENTS\", action);\n\n      return { ...state };\n    case \"DELETE_COMMENTS\":\n      return { ...state };\n\n    default:\n      return state;\n  }\n}\nexport default itineraryReducer;\n","const initialState = {\n  token: \"\",\n  isLoggedin: false,\n  users: [],\n  picture: \"\",\n  err: \"\",\n};\n\n//you had some issues acting the payload to pass data from your action to your reducer\n//I changed a bit the naming too so it makes more sense\nfunction usersReducers(state = initialState, action) {\n  console.log(\"user action\", action);\n  switch (action.type) {\n    case \"FETCH_USERS_SUCCESS\":\n      console.log(\"FETCH_USERS_SUCCESS\", action);\n      return { ...state, users: action.payload, err: \"\" };\n    // case \"REGISTER_SUCCESS\":\n    //   return {\n    //     ...state,\n    //     token: action.token,\n    //     users: action.payload.name,\n    //     email: action.payload.email,\n    //     isLoggedin: true,\n    //   };\n    case \"FETCH_USERS_ERROR\":\n      console.log(\"FETCH_USERS_ERROR\", action);\n      return { ...state, err: action.payload.data };\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...state,\n        // token: action.payload.data.token,\n        token: action.token,\n        users: action.payload.name,\n        favorites: action.payload.favorites,\n        picture: action.payload.picture,\n        email: action.payload.email,\n        isLoggedin: true,\n      };\n    case \"LOGED_OUT\":\n      return {\n        ...state,\n        isLoggedin: false,\n        token: null,\n      };\n    // case \"DELETE_USER_FAVORITE\":\n    //   return { ...state };\n    default:\n      return state;\n  }\n}\nexport default usersReducers;\n","import { combineReducers } from \"redux\";\nimport citiesReducer from \"./citiesReducer\";\nimport itineraryReducer from \"./itineraryReducer\";\nimport usersReducers from \"./usersReducers\";\nconst rootReducer = combineReducers({\n  cities: citiesReducer,\n  itineraries: itineraryReducer,\n  users: usersReducers\n});\nexport default rootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Circle.16fd0ef3.png\";"],"sourceRoot":""}